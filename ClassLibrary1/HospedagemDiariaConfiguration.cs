// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ClassLibrary1
{

    // HospedagemDiaria
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public partial class HospedagemDiariaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HospedagemDiaria>
    {
        public HospedagemDiariaConfiguration()
            : this("dbo")
        {
        }

        public HospedagemDiariaConfiguration(string schema)
        {
            ToTable("HospedagemDiaria", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdHospedagem).HasColumnName(@"idHospedagem").HasColumnType("int").IsRequired();
            Property(x => x.IdQuarto).HasColumnName(@"idQuarto").HasColumnType("int").IsRequired();
            Property(x => x.NumHospedes).HasColumnName(@"numHospedes").HasColumnType("int").IsRequired();
            Property(x => x.DtDiaria).HasColumnName(@"dtDiaria").HasColumnType("datetime").IsRequired();
            Property(x => x.VlDiaria).HasColumnName(@"vlDiaria").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.FlPagamento).HasColumnName(@"flPagamento").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.Hospedagem).WithMany(b => b.HospedagemDiarias).HasForeignKey(c => c.IdHospedagem).WillCascadeOnDelete(false); // fk_DiariaHospedagem_Hospedagem_idHospedagem
            HasRequired(a => a.Quarto).WithMany(b => b.HospedagemDiarias).HasForeignKey(c => c.IdQuarto).WillCascadeOnDelete(false); // fk_DiariaHospedagem_Quarto_idQuarto
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
