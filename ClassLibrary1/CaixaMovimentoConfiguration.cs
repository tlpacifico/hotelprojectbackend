// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ClassLibrary1
{

    // CaixaMovimento
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public partial class CaixaMovimentoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CaixaMovimento>
    {
        public CaixaMovimentoConfiguration()
            : this("dbo")
        {
        }

        public CaixaMovimentoConfiguration(string schema)
        {
            ToTable("CaixaMovimento", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdHospedagemPagamento).HasColumnName(@"idHospedagemPagamento").HasColumnType("int").IsOptional();
            Property(x => x.IdProdutoMovimento).HasColumnName(@"idProdutoMovimento").HasColumnType("int").IsOptional();
            Property(x => x.IdTipoOperacao).HasColumnName(@"idTipoOperacao").HasColumnType("int").IsRequired();
            Property(x => x.DtOperacao).HasColumnName(@"dtOperacao").HasColumnType("datetime").IsRequired();
            Property(x => x.VlOperacao).HasColumnName(@"vlOperacao").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ObsOperacao).HasColumnName(@"obsOperacao").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);

            // Foreign keys
            HasOptional(a => a.HospedagemPagamento).WithMany(b => b.CaixaMovimentoes).HasForeignKey(c => c.IdHospedagemPagamento).WillCascadeOnDelete(false); // fk_CaixaMovimento_HospedagemPagamento_idHospedagemPagamento
            HasOptional(a => a.ProdutoMovimento).WithMany(b => b.CaixaMovimentoes).HasForeignKey(c => c.IdProdutoMovimento).WillCascadeOnDelete(false); // fk_CaixaMovimento_ProdutoMovimento_idProdutoMovimento
            HasRequired(a => a.TipoOperacao).WithMany(b => b.CaixaMovimentoes).HasForeignKey(c => c.IdTipoOperacao).WillCascadeOnDelete(false); // fk_CaixaMovimento_TipoOperacao_idTipoOperacao
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
